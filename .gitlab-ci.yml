image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CI_POETRY_VERSION: 1.8.2
cache:
  paths:
    - build
stages:
  - build
  - test
  - lint
  - publish
  - pages
  - scan
include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

shell-test:
  stage: test
  before_script:
    - apt-get update
    - apt-get install -y shunit2 zsh
  script:
    - make shell-test

changed-files-pre-commit:
  extends: python-lint
  stage: lint
  before_script:
    - poetry config virtualenvs.in-project true
    - echo "python-build Setting.. poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE"
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - |
      if [[ -f pyproject.toml ]]; then
        if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
          echo "python-lint: Updating poetry to $CI_POETRY_VERSION";
          pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
        fi;

        echo "python-lint: Installing with poetry";
        time poetry install --all-extras;
      else
        if  [[ -f requirements.txt ]]; then
          echo "python-lint: Installing with pip";
          time pip3 install -r requirements.txt;
        fi;
      fi;
    - poetry run pip install pre-commit
  script:
    - 'echo "Fetching target branch: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME"'
    - git fetch origin "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - |
      CHANGED_FILES=$(git diff --name-only origin/"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"...HEAD || true)
      if [ -z "$CHANGED_FILES" ]; then
        echo "No files to check."
      else
        echo "CHANGED_FILES=$CHANGED_FILES"
        echo "$CHANGED_FILES" | xargs pre-commit run --files
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
